{"version":3,"sources":["components/Footer.js","hooks/useOnEnter.js","utils.js","reducers/useTodos.js","containers/TodoItem.js","hooks/useDoubleClick.js","containers/TodoList.js","hooks/useInput.js","serviceWorker.js","index.js","App/App.js"],"names":["Footer","react_default","a","createElement","className","href","useOnEnter","callback","inputs","useCallback","event","key","preventDefault","guid","s4","Math","random","toString","substring","concat","newTodo","label","done","id","trim","reducer","deleteTodo","state","filter","i","addTodo","Object","toConsumableArray","setDone","map","objectSpread","setLabel","toggleDone","globalReducer","JSON","parse","localStorage","getItem","todos","setItem","stringify","TodoItem","_ref","todo","_useTodos","useTodos","_useTodos2$","slicedToArray","_useState","useState","_useState2","editing","setEditing","onDelete","onDone","onChange","target","value","handleViewClick","onClick","onDoubleClick","timeout","clicks","_len","arguments","length","rest","Array","_key","push","Date","getTime","clearTimeout","setTimeout","apply","useDoubleClick","finishedCallback","onEnter","ref","useRef","useOnClickOutside","type","checked","autoFocus","onKeyPress","TodoList","router","useRouter","backGround","setBackGround","_useTodos2","left","useMemo","reduce","p","c","visibleTodos","match","params","anyDone","some","allSelected","every","onToggleAll","forEach","onClearCompleted","_useInput","defaultValue","setValue","useInput","_useInput2","newValue","onNewValueChange","setNewValue","onAddTodo","Fragment","style","color","placeholder","backgroundColor","htmlFor","fontSize","react_router_dom","exact","to","activeClassName","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","root","document","getElementById","ReactDOM","render","react_router","path","component","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e8108630.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../../src/index.css\"\nexport default function Footer() {\n  return (\n    <footer className=\"info\">\n      <p className=\"foot\">Double-click to edit a todo</p>\n      <p className=\"foot\">\n        Created by <a href=\"http://github.com/jacob-ebey/\">jacob-ebey</a>\n      </p>\n      <p className=\"foot\">\n        Part of <a href=\"http://todomvc.com\">TodoMVC</a>\n      </p>\n    </footer>\n  );\n}\n","import { useCallback } from \"react\";\n\nexport default function useOnEnter(callback, inputs) {\n  return useCallback(event => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      callback(event);\n    }\n  }, inputs);\n}\n","export function guid() {\n  var s4 = () => {\n    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n  };\n\n  return `${s4()}${s4()}-${s4()}-${s4()}-${s4()}-${s4()}${s4()}${s4()}`;\n}\n","import { globalReducer } from \"react-hook-utils\";\n\nimport { guid } from \"../utils\";\n\nexport const newTodo = label => ({\n  done: false,\n  id: guid(),\n  label: (label || \"\").trim()\n});\n\nexport const reducer = {\n  // Delete a todo by id\n  deleteTodo: (state, id) => state.filter(i => i.id !== id),\n\n  // Create a new item\n  addTodo: (state, label) => [newTodo(label), ...state],\n\n  // Set the done state of an item\n  setDone: (state, id, done) =>\n    state.map(i =>\n      i.id === id\n        ? {\n            ...i,\n            done\n          }\n        : i\n    ),\n\n  // Set the label of an item\n  setLabel: (state, id, label) =>\n    state.map(i =>\n      i.id === id\n        ? {\n            ...i,\n            label\n          }\n        : i\n    ),\n\n  // Toggle an item done\n  toggleDone: (state, id) =>\n    state.map(i =>\n      i.id === id\n        ? {\n            ...i,\n            done: !i.done\n          }\n        : i\n    )\n};\n\nexport default globalReducer(\n  // Load todos from local storage\n  JSON.parse(localStorage.getItem(\"todos\") || \"[]\"),\n  reducer,\n  // On state change, persist to local storage\n  todos => localStorage.setItem(\"todos\", JSON.stringify(todos))\n);\n","import React, { useCallback, useRef, useState } from \"react\";\nimport useOnClickOutside from \"use-onclickoutside\";\n\nimport useDoubleClick from \"../hooks/useDoubleClick\";\nimport useOnEnter from \"../hooks/useOnEnter\";\nimport useTodos from \"../reducers/useTodos\";\n\nexport default function TodoItem({ todo }) {\n  const [, { deleteTodo, setLabel, toggleDone }] = useTodos(() => null);\n\n  const [editing, setEditing] = useState(false);\n\n  const onDelete = useCallback(() => deleteTodo(todo.id), [todo.id]);\n  const onDone = useCallback(() => toggleDone(todo.id), [todo.id]);\n  const onChange = useCallback(event => setLabel(todo.id, event.target.value), [\n    todo.id\n  ]);\n\n  const handleViewClick = useDoubleClick(null, () => setEditing(true));\n  const finishedCallback = useCallback(\n    () => {\n      setEditing(false);\n      setLabel(todo.id, todo.label.trim());\n    },\n    [todo]\n  );\n\n  const onEnter = useOnEnter(finishedCallback, [todo]);\n  const ref = useRef();\n  useOnClickOutside(ref, finishedCallback);\n\n  return (\n    <li\n      onClick={handleViewClick}\n      className={`${editing ? \"editing\" : \"\"} ${todo.done ? \"completed\" : \"\"}`}\n    >\n      <div className=\"view \">\n        <input\n          type=\"checkbox\"\n          className=\"toggle \"\n          checked={todo.done}\n          onChange={onDone}\n          autoFocus={true}\n        />\n        <label>{todo.label}</label>\n        <button className=\"destroy\" onClick={onDelete} />\n      </div>\n      {editing && (\n        <input\n          ref={ref}\n          className=\"edit \"\n          value={todo.label}\n          onChange={onChange}\n          onKeyPress={onEnter}\n        />\n      )}\n    </li>\n  );\n}\n","export default function useDoubleClick(onClick, onDoubleClick) {\n  let clicks = [];\n  let timeout;\n\n  return (event, ...rest) => {\n    clicks.push(new Date().getTime());\n\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      if (\n        clicks.length > 1 &&\n        clicks[clicks.length - 1] - clicks[clicks.length - 2] < 250\n      ) {\n        if (onDoubleClick) {\n          onDoubleClick(event, ...rest);\n        }\n      } else if (onClick) {\n        onClick(event, ...rest);\n      }\n      clicks = [];\n    }, 250);\n  };\n}\n","import React, {useState, useCallback, useMemo } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport useRouter from \"use-react-router\";\n\nimport useInput from \"../hooks/useInput\";\nimport useOnEnter from \"../hooks/useOnEnter\";\nimport useTodos from \"../reducers/useTodos\";\nimport TodoItem from \"./TodoItem\";\nimport \"../../src/index.css\"\n\n\n//! use state to set the background color, make onclicks to change the background color. change font to black so its easier to read, make opacity just light enough to give off the feeling of a placeholder, give better instructions in the placeholder box, make the tabs they click change color to avoid confusion, make the footer readable.\nexport default function TodoList() {\n  const router = useRouter();\n\n  const [backGround, setBackGround] = useState('white')\n  const [todos, { addTodo, deleteTodo, setDone }] = useTodos();\n\n  const left = useMemo(() => todos.reduce((p, c) => p + (c.done ? 0 : 1), 0), [\n    todos\n  ]);\n\n  const visibleTodos = useMemo(\n    () =>\n      router.match.params.filter\n        ? todos.filter(i =>\n            router.match.params.filter === \"active\" ? !i.done : i.done\n          )\n        : todos,\n    [todos, router.match.params.filter]\n  );\n\n  const anyDone = useMemo(() => todos.some(i => i.done), [todos]);\n  const allSelected = useMemo(() => visibleTodos.every(i => i.done), [\n    visibleTodos\n  ]);\n\n  const onToggleAll = useCallback(\n    () => {\n      visibleTodos.forEach(i => setDone(i.id, !allSelected));\n    },\n    [visibleTodos, allSelected]\n  );\n\n  const onClearCompleted = useCallback(\n    () => {\n      todos.forEach(i => {\n        if (i.done) {\n          deleteTodo(i.id);\n        }\n      });\n    },\n    [todos]\n  );\n\n  const [newValue, onNewValueChange, setNewValue] = useInput();\n  const onAddTodo = useOnEnter(\n    () => {\n      if (newValue) {\n        addTodo(newValue);\n        setNewValue(\"\");\n      }\n    },\n    [newValue]\n  );\n\n  return (\n    <React.Fragment>\n      <header className=\"header\" >\n        <h1 style={{color:\"black\"}}>todos</h1>\n        <input\n        // added this ID because i needed to alter the opacity of the input box, I could barely read what the placeholder said\n        id=\"inputID\"\n          className=\"new-todo active\" \n          // it just said what needs to be done. there is no direction on how to enter your input. i sat there for a second looking for a button and then my computer brain said \"hit enter\" most people need direct instruction\n          placeholder=\"Type your todo here and then hit enter\" \n          onKeyPress={onAddTodo}\n          value={newValue}\n          onChange={onNewValueChange}\n        />\n      </header>\n\n      <section style={{backgroundColor: backGround, color:\"black\"}}>\n        <input \n          id=\"toggle-all\"\n          type=\"checkbox\"\n          className=\"toggle-all  \"\n          checked={allSelected}\n          onChange={onToggleAll}\n        />\n        <label htmlFor=\"toggle-all\" />\n        <ul className=\"todo-list\">\n          {visibleTodos.map(todo => (\n            <TodoItem key={todo.id} todo={todo} />\n          ))}\n        </ul>\n      </section>\n\n      <footer className=\"footer\" style={{color:\"black\",fontSize:\"medium\"}}>\n        <span className=\"todo-count\">\n          <strong>{left}</strong> items left\n        </span>\n        <ul className=\"filters \">\n          <li className=\"\">\n            <NavLink exact={true} to=\"/\" activeClassName=\"selected all\" onClick={() => setBackGround('white')} >\n              All\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/active\" activeClassName=\"selected active\" onClick={() => setBackGround('green') } >\n              Active\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/completed\" activeClassName=\"selected completed\" onClick={() => setBackGround('darkgray') }>\n              Completed\n            </NavLink>\n          </li>\n        </ul>\n        {anyDone && (\n          <button className=\"clear-completed complete-button\" onClick={onClearCompleted}>\n            Clear completed\n          </button>\n        )}\n      </footer>\n      \n    </React.Fragment>\n  );\n}\n","import { useCallback, useState } from \"react\";\n\nexport default function useInput(defaultValue) {\n  const [value, setValue] = useState(defaultValue || \"\");\n\n  const onChange = useCallback(event => {\n    setValue(event.target.value);\n  });\n\n  return [value, onChange, setValue];\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"core-js/es6/map\";\nimport \"core-js/es6/set\";\nimport \"raf/polyfill\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst root = document.getElementById(\"root\");\nReactDOM.render(<App />, root);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport \"todomvc-app-css/index.css\";\n\nimport Footer from \"../components/Footer\";\nimport TodoList from \"../containers/TodoList\";\n\nexport default function App() {\n  return (\n    <HashRouter>\n      <React.Fragment>\n        <div className=\"todoapp\">\n          <Route path=\"/:filter?\" component={TodoList} />\n        </div>\n        <Footer />\n      </React.Fragment>\n    </HashRouter>\n  );\n}\n"],"sourceRoot":""}